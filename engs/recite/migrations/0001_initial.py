# Generated by Django 3.1.1 on 2020-09-28 13:41

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
                'db_table': 'df_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ItemBank',
            fields=[
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('item_id', models.AutoField(primary_key=True, serialize=False, verbose_name='题目编号')),
                ('item_ch', models.TextField(max_length=2560, verbose_name='题目中文')),
                ('item_en', models.TextField(max_length=2560, verbose_name='题目英文')),
                ('version_num', models.IntegerField(default=1, verbose_name='题目版本')),
                ('item_type', models.IntegerField(choices=[(1, '汉英'), (2, '英汉'), (3, '汉英句子'), (4, '英汉句子')], default=1, verbose_name='题目类型')),
                ('unit_item_id', models.IntegerField(default=None, verbose_name='单元题目编号')),
            ],
            options={
                'verbose_name': '题库',
                'verbose_name_plural': '题库',
                'db_table': 'df_item_bank',
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('unit_id', models.AutoField(primary_key=True, serialize=False, verbose_name='单元id')),
                ('unit_name', models.CharField(max_length=128, verbose_name='单元名称')),
            ],
            options={
                'verbose_name': '单元表',
                'verbose_name_plural': '单元表',
                'db_table': 'df_unit',
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('test_id', models.AutoField(primary_key=True, serialize=False, verbose_name='测试编号')),
                ('test_type', models.SmallIntegerField(choices=[(1, '复习'), (2, '测验')], default=1, verbose_name='测试类型')),
                ('stu_answer', models.TextField(max_length=2560, verbose_name='学生答案')),
                ('is_correct', models.BooleanField(choices=[(0, '错误'), (1, '正确')])),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recite.itembank', verbose_name='题目编号')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='学生编号')),
            ],
            options={
                'verbose_name': '测试表',
                'verbose_name_plural': '测试表',
                'db_table': 'df_test',
            },
        ),
        migrations.CreateModel(
            name='Learned',
            fields=[
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('learned_id', models.AutoField(primary_key=True, serialize=False, verbose_name='学习编号')),
                ('reviewed_times', models.IntegerField(verbose_name='复习次数')),
                ('test_times', models.IntegerField(verbose_name='测验次数')),
                ('incorrect_times', models.IntegerField(default=0, verbose_name='错误次数')),
                ('correct_times', models.IntegerField(default=0, verbose_name='正确次数')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recite.itembank', verbose_name='题目编号')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='学生编号')),
            ],
            options={
                'verbose_name': '已学表',
                'verbose_name_plural': '已学表',
                'db_table': 'df_learned',
            },
        ),
        migrations.AddField(
            model_name='itembank',
            name='unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recite.unit', verbose_name='单元'),
        ),
    ]
